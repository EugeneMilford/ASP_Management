@page
@model OfficeManagement.Pages.CalendarModel
@{
    ViewData["Title"] = "Calendar";
}

<div id='calendar'></div>

<!-- Event Details Modal -->
<div class="modal fade" id="eventModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Event Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="eventForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="eventId">
                    <div class="form-group">
                        <label for="eventTitle">Title</label>
                        <input type="text" class="form-control" id="eventTitle" required>
                    </div>
                    <div class="form-group">
                        <label for="eventDescription">Description</label>
                        <textarea class="form-control" id="eventDescription"></textarea>
                    </div>
                    <div class="form-group">
                        <label for="eventStart">Start</label>
                        <input type="datetime-local" class="form-control" id="eventStart" required>
                    </div>
                    <div class="form-group">
                        <label for="eventEnd">End</label>
                        <input type="datetime-local" class="form-control" id="eventEnd" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="deleteEventBtn">Delete</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveEventBtn">Save</button>
            </div>
        </div>
    </div>
</div>

<link href='https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/main.min.css' rel='stylesheet' />
<link href='https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css' rel='stylesheet' />
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@5.10.2/main.min.js'></script>
<script src='https://code.jquery.com/jquery-3.6.0.min.js'></script>
<script src='https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/js/bootstrap.bundle.min.js'></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        var calendar = new FullCalendar.Calendar(document.getElementById('calendar'), {
            initialView: 'dayGridMonth',
            editable: true,
            selectable: true,
            events: '/Calendar?handler=Events',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,timeGridWeek,timeGridDay'
            },
            eventContent: function(info) {
                var userName = info.event.extendedProps.userName || 'Unknown';
                var title = info.event.title;
                var eventContent = document.createElement('div');
                eventContent.innerHTML = `<strong>${title}</strong><br><small>By: ${userName}</small>`;
                return { domNodes: [eventContent] };
            },
            eventClick: function(info) {
                $('#eventId').val(info.event.id);
                $('#eventTitle').val(info.event.title);
                $('#eventDescription').val(info.event.extendedProps.description || '');
                $('#eventStart').val(moment(info.event.start).format('YYYY-MM-DDTHH:mm'));
                $('#eventEnd').val(moment(info.event.end).format('YYYY-MM-DDTHH:mm'));

                $('#deleteEventBtn').toggle(info.event.id != null);

                $('#eventModal').modal('show');
            },
            select: function(info) {
                $('#eventId').val('');
                $('#eventTitle').val('');
                $('#eventDescription').val('');
                $('#eventStart').val(moment(info.start).format('YYYY-MM-DDTHH:mm'));
                $('#eventEnd').val(moment(info.end).format('YYYY-MM-DDTHH:mm'));
                $('#deleteEventBtn').hide();
                $('#eventModal').modal('show');
                calendar.unselect();
            }
        });

        calendar.render();

        // Save event handler
        $(document).on('click', '#saveEventBtn', function() {
            var eventData = {
                CalendarId: $('#eventId').val() ? parseInt($('#eventId').val()) : 0,
                Title: $('#eventTitle').val(),
                Description: $('#eventDescription').val(),
                Start: $('#eventStart').val(),
                End: $('#eventEnd').val()
            };

            if (new Date(eventData.Start) > new Date(eventData.End)) {
                alert('End date must be after start date');
                return;
            }

            var url = eventData.CalendarId ? '/Calendar?handler=UpdateEvent' : '/Calendar?handler=AddEvent';

            $.ajax({
                url: url,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(eventData),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        calendar.refetchEvents();
                        $('#eventModal').modal('hide');
                    } else {
                        alert('Failed to save event: ' + (response.message || 'Unknown error'));
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                    alert('An error occurred while saving the event: ' + xhr.responseText);
                }
            });
        });

        // Delete event handler
        $(document).on('click', '#deleteEventBtn', function() {
            if (!confirm('Are you sure you want to delete this event?')) return;

            var eventId = $('#eventId').val();
            if (!eventId) return;

            $.ajax({
                url: '/Calendar?handler=DeleteEvent',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ CalendarId: parseInt(eventId) }),
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function(response) {
                    if (response.success) {
                        calendar.refetchEvents();
                        $('#eventModal').modal('hide');
                    } else {
                        alert('Failed to delete event: ' + (response.message || 'Unknown error'));
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the event: ' + xhr.responseText);
                }
            });
        });

        // Fix for close button - use proper Bootstrap dismissal
        $(document).on('click', '[data-dismiss="modal"]', function(e) {
            e.preventDefault();
            $('#eventModal').modal('hide');
        });
    });
</script>